//
//  ListGistsViewControllerTests.swift
//  Gister
//
//  Created by Raymond Law on 10/12/17.
//  Copyright (c) 2017 Clean Swift LLC. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import Gister
import XCTest

class ListGistsViewControllerTests: XCTestCase
{
  // MARK: Subject under test
  
  var sut: ListGistsViewController!
  var window: UIWindow!
  
  // MARK: Test lifecycle
  
  override func setUp()
  {
    super.setUp()
    window = UIWindow()
    setupListGistsViewController()
  }
  
  override func tearDown()
  {
    window = nil
    super.tearDown()
  }
  
  // MARK: Test setup
  
  func setupListGistsViewController()
  {
    let bundle = Bundle.main
    let storyboard = UIStoryboard(name: "Main", bundle: bundle)
    sut = storyboard.instantiateViewController(withIdentifier: "ListGistsViewController") as! ListGistsViewController
  }
  
  func loadView()
  {
    window.addSubview(sut.view)
    RunLoop.current.run(until: Date())
  }
  
  // MARK: Test doubles
  
  class TableViewSpy: UITableView
  {
    // MARK: Method call expectations
    
    var reloadDataCalled = false
    
    // MARK: Spied methods
    
    override func reloadData()
    {
      reloadDataCalled = true
    }
  }
  
  class ListGistsBusinessLogicSpy: ListGistsBusinessLogic
  {
    var fetchGistsCalled = false
    
    func fetchGists(request: ListGists.FetchGists.Request)
    {
      fetchGistsCalled = true
    }
  }
  
  // MARK: Tests
  
  func testShouldFetchGistsWhenViewIsLoaded()
  {
    // Given
    let listGistsBusinessLogicSpy = ListGistsBusinessLogicSpy()
    sut.interactor = listGistsBusinessLogicSpy
    
    // When
    loadView()
    
    // Then
    XCTAssertTrue(listGistsBusinessLogicSpy.fetchGistsCalled, "viewDidLoad() should ask the interactor to fetch gists")
  }
  
  func testDisplayFetchedGistsReloadTableView()
  {
    // Given
    let tableViewSpy = TableViewSpy()
    sut.tableView = tableViewSpy
    let displayedGists = [Seeds.DisplayedGists.text, Seeds.DisplayedGists.html]
    let viewModel = ListGists.FetchGists.ViewModel(displayedGists: displayedGists)
    
    // When
    loadView()
    sut.displayFetchedGists(viewModel: viewModel)
    
    // Then
    XCTAssert(tableViewSpy.reloadDataCalled, "displayFetchedGists(viewModel:) should reload the table view")
  }
}
